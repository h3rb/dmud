dMud version 1.0a - submitted to the 32k mud competition, september 20 2005

Copyright (c) 2005 Herbert Elwood Gilliland III.  All rights reserved.

Distributed as OSI Certified: Creative Commons License (www.creativecommons.org)
Supported platforms: MacOS, Darwin, Windows, Linux, Solaris, Unix

Author contact: heg@andrew.cmu.edu / madmerv@gmail.com

About the Software
------------------

dMUD is a project that began around the end of August, 2005, as an
entry into the 32k Mud Competition sponsored by Pizza_Party on
mudconnect.com, and would have been written slightly differently
had it not be limited to 32k.

All in all, it possesses features that are similar to, but not derived
from Aber, Diku and LP mud software.  No code included in this software
is identical to Diku source, nor is any of it 'borrowed' from either
of those two software packages.

dMUD runs on any system which supports Java, PHP and MySQL.  It requires
use of a web server, such as Apache, to serve its content, and the use of
a web browser to serve the content through a telnet socket.

The basic structures and classes, aside from game-specific content
and constructs, are the core of any MUD written in PHP/MySQL+Processing.


Software License
----------------

dMUD is released under the Creative Commons license, the text of which
is available at (www.creativecommons.org), and is released under the
Public Domain Dedication under U.S. copyright law.  Because this software
is licensed under Creative Commons, you may not profit from it, and are
bound under U.S. copyright law with respect to derived works.


About the Author
----------------

Herbert Elwood Gilliland III was born in Pittsburgh, Pennsylvania in 1997.
He has worked on various Diku-derived and PennMUSH-derived softwares since
his early entrance into the MUD community.  He runs (www.mudolc.org), which
is a public repository for creative mud-related software, and can be found
on mudconnect.com, mudworld.org and has contributed to a variety of other
types of software.


How to install / use dMUD
-------------------------

To install dMUD, you need:

  1) the dMUD applet, php scripts and associated .txt files

  2) a web space (preferably served by apache) supporting php and mysql

  For Windows Apache / PHP / MySQL configuration: 
  http://internetmaster.com/installtutorial/

  *** Note: For best results on windows, use mysql-4.0.21-win.zip ***
  http://safariexamples.informit.com/0672327252/MySQL/Windows/binary/

  Or try a Linux configuration, using apache, php and mysql with mysqladmin
  access.  Many free web spaces offer this service.  Most administrators of
  linux can use PackageManager or SoftwareInstaller to download and configure
  the packages, or visit php.net and mysql.com for more information on how
  to download and install these packages for Linux.

  3) A browser window opened on the computer that will host players, which has
     access to the MySQL database, and is running the java applet

Setting up PHP/MySQL for a new dMUD
-----------------------------------

  *** You will have to use phpmyadmin to set up the user and password ***

  The "dmud" user is essential to creating the link between PHP and the
  dMUD applet.  The "dmud" user needs full access to all MySQL statements.
   
  The default user/password for the database is "dmud"/"dmudpassword",
  use these to create the link between the dMud applet and PHP.

  The Privledges for MySQL user "dmud" must be:
  SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, FILE, INDEX, 
  ALTER, CREATE TEMPORARY TABLES (basically all the settings under
  the "Data" and "Structure" tabs in PHPMyAdmin)

  The scripts only use SELECT, INSERT, UPDATE, CREATE, but this creates
  the most freedom if you wish to modify or add scripts to the MUD.

  The default administrative settings for the user are:
     Grant: No; and all other settings are completely optional   	

 *** The default database name is "dmuddb", generated by 'genesis.php' ***

  If you want to change the user/password for the db, you will need to
  modify each .php script to reflect the changes.  For linux users,
  you may do this by using "replace" if you have "replace" installed on
  your machine.  Simply "replace pmud newusername -- *.php" and
  "replace pmudpassword newpassword" -- or, you may use the provided
  linux install script to set up your database.

  NOTE: By using "replace dmud newusername -- *.php" you will be changing
  the username as well; either edit the scripts by hand, or keep your DB
  and your MySQL username the same.

Multiple Ports
--------------

  It is possible to run multiple copies of the server applet to share the
  same database on the same host.  I'm not sure if the service must
  be run locally, or can be run remotely, in multiple browser windows.
  Servers do not talk to one another, so there is no "RWHO" yet for dMud.
  One could easily add RWHO functionality by saving RWHO information to 
  a master table stored in the PHP MySQL database, and then linking the
  information via a centralized .php script on a master host.

NOTE TO SELF: Add this feature


Steps to autoconfigure
----------------------

To start a mud running dMUD, you must first configure MySQL to
support a user called 'dmud' - all you will need is a user
and password combination; the MySQL username must be equal to
the "dmud" username, only if you have not edited the scripts by hand.

To do this, load up "phpmyadmin" after installing MySQL and add a
new user under the "Privledges" tab

Execute the administrative 'genesis.php' script by loading it into your
browser, which will build the mysql database.  This is a one time script, 
which will determine if the space is already built, and if not, create the
appropriate data structures for population by your staff and players.
It also creates the administrative password and username for the mud,
which you may wish to change by editing the 'genesis.php' script before
executing it.  

Once the 'genesis.php' script properly executes and returns a positive
response, the mysql database has been properly architected.


Starting the Server
-------------------

Load 'serve.html' into your browser.  If the applet loads correctly, it will
inform you of its execution status.  You may view extraneous information
in the Java console.  Then telnet to the domain / port on which the applet
is running, and voila!

NOTE: You must have Java installed in your web browser for this to function
properly.


Changing Server Settings
------------------------

Modify 'serve.html' and change the parameters that are sent
to the java applet to support your MySQL username and password 
combination, if you have changed it, then modify the script to 
reflect the port you want to use.  By default, the 'serve.html' file 
should have the port set to 4444.


Vocabulary and Diction
----------------------

In a recent proof, the author decided to change the classic name of
MUD enemies, Mobs, to Actors.  He found that in doing so, the decision
was not well received and not wholly understood.  For the purposes of
graphical multiplayer games, and multiplayer "MUD-like" softwares that
possess internal, complex artificial life or artificial intelligence
languages, the world Actor may be a bit more generic and appropriate,
and is more standard in the commercial gaming industry, as well as
a classic example of Dramatic Structure outlined by Aristotle.

Another approach may be to label "Mobs" as "creatures" -- which is
a dictive choice when referring to the creation of this data as
"evolution" - as in the command "evolve" which refers to Darwinism,
a reference to the theories that outline evolution.  "Creation" -
part of the word Creature, which is also a part of the acronym OLC,
may be the most symbolically logical choice, as most "creatures" in
a fantasy game are not human - which is what the word "actor" may
imply.

In the interest of the 32k mud competition, the word "mob" was shorter
than the word "actor", and the abbreviation "obj" shorter than the
words "object" or "item", so the classic mud words, "mob" and "obj",
are used here.  In possibly future versions of dMUD, or derived work,
the author encourages the use of "actor" and "prop" instead of "mobile"
and "object".


Developer Notes
---------------

dMUD was written using Processing, a Java meta-language developed at MIT,
and later as an open source project initiated by Ben Fry and Casey Reas.
To download the Processing development environment, visit www.processing.org

dMUD uses a series of php scripts which interface to a MySQL database, which
holds all of the information on players and the world.  The best way to
develop is to use Processing, which works on MacOS, Linux and Windows,
and to write the .php by hand.  Windows, Macintosh and Linux users are
all encouraged to share their thoughts about dMUD on the mudolc.org website.

** Questions specific to Processing should be discussed primarily on the
Processing.org website, which has a great forum for reference, code snippets,
and valuable information pertaining to this wonderful language. **

Development Status
------------------

I reached the 32k Mud Compo limit.  In the interest of not completely
butchering the code, I have left this version intact.  With minimal
additional effort, it should be able to 

The following features are not fully implemented:

  evolve
  design
  equipment and inventory
  combat

File Manifest
-------------

  Bytes Filename        Description
------------------------------------
        applet/         contains the dMUD applet+data
        dMUD/           contains dMUD.pde source, which is 20683, +data
   667+ connect.php     connects two scenes
 1,692+ design.php      designs a new item
   689+ dig.php         digs a new scene
 1,176+ evolve.php      evolves a new creature
   684+ exit.php        returns exit data for a single direction in a scene
   820+ exits.php       returns exits data for a single scene
 3,567  genesis.php     installation script for MySQL
    28  goodbye.txt     text displayed when a user quits
        help/           folder contains all help text, including help.txt
 1,398+ load_player.php loads an existing player
   877+ mob.php         returns mob data
   870+ obj.php         returns obj data
    46  motd.txt        message of the day file
   135  new.txt         new player welcome message
 1,692+ new_player.php  new player insertion script
10,361  readme.txt      this file
 1,545+ save_player.php saves a player
   802+ scene.php       checks for the existance of a scene
        serve.html      the browser page for operating the server
   690  title.txt       title screen
   662+ update.php      generic update script

     + - included in total size for 32k Mud Competition submission

  Total size: 
